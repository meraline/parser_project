#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ—Ç–∑—ã–≤–∞
"""

import asyncio
from playwright.async_api import async_playwright


async def find_ratings():
    """–ò—â–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""

    url = "https://www.drom.ru/reviews/toyota/camry/1428758/"

    async with async_playwright() as p:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π Chromium
        browser = await p.chromium.launch(
            headless=False,
            executable_path="/home/analityk/–î–æ–∫—É–º–µ–Ω—Ç—ã/projects/parser_project/chrome-linux/chrome",
        )
        page = await browser.new_page()

        try:
            await page.goto(url, wait_until="networkidle")

            print("üîç –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤...")

            # 1. –ò—â–µ–º –æ–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ (—É–∂–µ –Ω–∞–π–¥–µ–Ω)
            rating_element = await page.query_selector('[itemprop="ratingValue"]')
            if rating_element:
                rating_text = await rating_element.text_content()
                print(f"    ‚úÖ –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {rating_text}")

            # 2. –ò—â–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 10
            print("\nüî¢ –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å —á–∏—Å–ª–∞–º–∏ 1-10:")
            for i in range(1, 11):
                elements = await page.query_selector_all(f'text="{i}"')
                if elements:
                    print(f"    –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å —á–∏—Å–ª–æ–º {i}: {len(elements)}")

            # 3. –ò—â–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–º "–í–Ω–µ—à–Ω–∏–π –≤–∏–¥", "–°–∞–ª–æ–Ω", "–î–≤–∏–≥–∞—Ç–µ–ª—å", "–•–æ–¥–æ–≤—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞"
            print("\nüè∑Ô∏è –ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ä–µ–π—Ç–∏–Ω–≥–æ–≤:")
            categories = ["–í–Ω–µ—à–Ω–∏–π –≤–∏–¥", "–°–∞–ª–æ–Ω", "–î–≤–∏–≥–∞—Ç–µ–ª—å", "–•–æ–¥–æ–≤—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞"]
            for category in categories:
                elements = await page.query_selector_all(f'text="{category}"')
                print(f"    {category}: {len(elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")

            # 4. –ò—â–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            print("\nüìä –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:")
            tables = await page.query_selector_all("table")
            print(f"    –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")

            for i, table in enumerate(tables):
                print(f"\n    === –¢–∞–±–ª–∏—Ü–∞ #{i+1} ===")
                rows = await table.query_selector_all("tr")
                for j, row in enumerate(rows[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫
                    cells = await row.query_selector_all("td, th")
                    if cells:
                        cell_texts = []
                        for cell in cells:
                            text = await cell.text_content()
                            cell_texts.append(text.strip())
                        print(f"        –°—Ç—Ä–æ–∫–∞ {j+1}: {' | '.join(cell_texts)}")

            # 5. –ò—â–µ–º –≤—Å–µ div —Å –∫–ª–∞—Å—Å–∞–º–∏ —Å–æ–¥–µ—Ä–∂–∞—â–∏–º–∏ "rating", "score", "grade"
            print("\n‚≠ê –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏:")
            selectors = [
                '[class*="rating"]',
                '[class*="score"]',
                '[class*="grade"]',
                '[class*="rate"]',
                ".drom-table",
                "[target-status]",
            ]

            for selector in selectors:
                elements = await page.query_selector_all(selector)
                if elements:
                    print(f"    {selector}: {len(elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")

            # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Å–∫—Ä—ã—Ç—ã–µ –±–ª–æ–∫–∏
            print("\nüëÅÔ∏è –°–∫—Ä—ã—Ç—ã–µ –±–ª–æ–∫–∏:")
            hidden_elements = await page.query_selector_all('[style*="display: none"]')
            print(f"    –°–∫—Ä—ã—Ç—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(hidden_elements)}")

            # 7. –ü–æ–∏—Å–∫ –ø–æ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–º –∫–ª–∞—Å—Å–∞–º Drom
            print("\nüéØ –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –∫–ª–∞—Å—Å—ã Drom:")
            drom_selectors = [
                ".rating",
                ".grade",
                ".score",
                ".review-rating",
                ".owner-rating",
                ".car-rating",
            ]

            for selector in drom_selectors:
                elements = await page.query_selector_all(selector)
                if elements:
                    print(f"    {selector}: {len(elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")

            # –ñ–¥–µ–º –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Å–º–æ—Ç—Ä–∞
            print("\n‚è∞ –ñ–¥–µ–º 15 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...")
            await page.wait_for_timeout(15000)

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")
        finally:
            await browser.close()


if __name__ == "__main__":
    asyncio.run(find_ratings())
