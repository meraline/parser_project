#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–ª–∏–Ω–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞
"""

import requests
from bs4 import BeautifulSoup
import json

def test_single_long_review():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–ª–∏–Ω–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞"""
    
    # URL –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞
    review_url = "https://www.drom.ru/reviews/aito/m7/1455586/"
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–ª–∏–Ω–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞")
    print(f"üìç URL –æ—Ç–∑—ã–≤–∞: {review_url}")
    
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    }
    
    try:
        response = requests.get(review_url, headers=headers, timeout=30)
        response.raise_for_status()
        
        soup = BeautifulSoup(response.content, 'html.parser')
        
        print(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, —Ä–∞–∑–º–µ—Ä: {len(response.content)} –±–∞–π—Ç")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç–∑—ã–≤–∞
        
        # 1. –ò—â–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        title_selectors = [
            'h1',
            'h2', 
            'h3',
            '[data-ftid="component_review_title"]',
            '.review-title'
        ]
        
        title = ""
        for selector in title_selectors:
            elem = soup.select_one(selector)
            if elem:
                title = elem.get_text(strip=True)
                print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞–π–¥–µ–Ω ({selector}): {title}")
                break
        
        if not title:
            print("‚ùå –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # 2. –ò—â–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –æ—Ç–∑—ã–≤–∞
        content_selectors = [
            '[data-ftid="review-content__positive"]',
            '[data-ftid="review-content__negative"]',
            '[data-ftid="review-content__breakages"]',
            '.css-6hj46s',
            '.hxiweg0',
            '.review-content'
        ]
        
        content_parts = []
        for selector in content_selectors:
            elements = soup.select(selector)
            for elem in elements:
                text = elem.get_text(strip=True)
                if text and len(text) > 10:  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞
                    content_parts.append(f"[{selector}]: {text[:100]}...")
        
        if content_parts:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(content_parts)} —Å–µ–∫—Ü–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞:")
            for i, part in enumerate(content_parts[:5], 1):
                print(f"  {i}. {part}")
        else:
            print("‚ùå –ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ç–∑—ã–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # 3. –ò—â–µ–º —Ä–µ–π—Ç–∏–Ω–≥
        rating_selectors = [
            '[data-ftid="component_rating"]',
            '.rating',
            '.stars'
        ]
        
        rating = 0
        for selector in rating_selectors:
            elem = soup.select_one(selector)
            if elem:
                rating_text = elem.get_text(strip=True)
                print(f"‚úÖ –†–µ–π—Ç–∏–Ω–≥ –Ω–∞–π–¥–µ–Ω ({selector}): {rating_text}")
                break
        
        # 4. –ò—â–µ–º –∞–≤—Ç–æ—Ä–∞
        author_selectors = [
            '.author',
            '.user-name',
            '[data-ftid="component_review_descrption"] span'
        ]
        
        author = ""
        for selector in author_selectors:
            elem = soup.select_one(selector)
            if elem:
                author = elem.get_text(strip=True)
                print(f"‚úÖ –ê–≤—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω ({selector}): {author}")
                break
        
        # 5. –ò—â–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        photos = soup.find_all('img')
        photo_count = 0
        for img in photos:
            src = img.get('src') or img.get('data-src')
            if src and ('photo' in src or 'auto.drom.ru' in src):
                photo_count += 1
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {photo_count}")
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞:")
        print(f"  –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")
        print(f"  –ê–≤—Ç–æ—Ä: {author}")
        print(f"  –°–µ–∫—Ü–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {len(content_parts)}")
        print(f"  –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {photo_count}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_single_long_review()
