#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ —Å–∫—Ä—ã—Ç—ã—Ö –±–ª–æ–∫–æ–≤ —Å —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏
"""

import asyncio
from playwright.async_api import async_playwright


async def debug_hidden_blocks():
    """–û—Ç–ª–∞–¥–∫–∞ —Å–∫—Ä—ã—Ç—ã—Ö –±–ª–æ–∫–æ–≤ —Å —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏"""

    url = "https://www.drom.ru/reviews/toyota/camry/1428758/"

    async with async_playwright() as p:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π Chromium
        browser = await p.chromium.launch(
            headless=False,
            executable_path="/home/analityk/–î–æ–∫—É–º–µ–Ω—Ç—ã/projects/parser_project/chrome-linux/chrome",
        )
        page = await browser.new_page()

        try:
            await page.goto(url, wait_until="networkidle")

            print("üîß –û—Ç–ª–∞–¥–∫–∞ —Å–∫—Ä—ã—Ç—ã—Ö –±–ª–æ–∫–æ–≤...")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–ª–æ–∫–æ–≤ –¥–æ –∫–ª–∏–∫–∞
            print("\nüìã –ë–ª–æ–∫–∏ –î–û –∫–ª–∏–∫–∞:")
            blocks_before = await page.query_selector_all(".drom-table")
            print(f"    –ù–∞–π–¥–µ–Ω–æ –±–ª–æ–∫–æ–≤ drom-table: {len(blocks_before)}")

            # –ò—â–µ–º –±–ª–æ–∫–∏ —Å —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏
            hidden_blocks = await page.query_selector_all('[target-status="close"]')
            print(f"    –ù–∞–π–¥–µ–Ω–æ —Å–∫—Ä—ã—Ç—ã—Ö –±–ª–æ–∫–æ–≤: {len(hidden_blocks)}")

            # –ò—â–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
            buttons = await page.query_selector_all(
                'button[data-toggle="preview-dropdown"]'
            )
            print(f"    –ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è: {len(buttons)}")

            # –ö–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫–∏
            for i, button in enumerate(buttons):
                print(f"    –ö–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É #{i+1}")
                await button.click()
                await page.wait_for_timeout(1000)  # –ñ–¥–µ–º 1 —Å–µ–∫—É–Ω–¥—É

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏ –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞
            print("\nüìã –ë–ª–æ–∫–∏ –ü–û–°–õ–ï –∫–ª–∏–∫–∞:")
            blocks_after = await page.query_selector_all(".drom-table")
            print(f"    –ù–∞–π–¥–µ–Ω–æ –±–ª–æ–∫–æ–≤ drom-table: {len(blocks_after)}")

            # –ò—â–µ–º –±–ª–æ–∫–∏ —Å —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏ –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞
            rating_blocks = await page.query_selector_all('[target-status="open"]')
            print(f"    –ù–∞–π–¥–µ–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –±–ª–æ–∫–æ–≤: {len(rating_blocks)}")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
            print("\nüìä –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü:")
            for i, table in enumerate(blocks_after):
                print(f"\n=== –¢–∞–±–ª–∏—Ü–∞ #{i+1} ===")
                rows = await table.query_selector_all("tr")
                for j, row in enumerate(rows):
                    cells = await row.query_selector_all("td")
                    if len(cells) >= 2:
                        key_elem = cells[0]
                        value_elem = cells[1]
                        key = await key_elem.text_content()
                        value = await value_elem.text_content()
                        print(f"    {key}: {value}")

            # –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            print("\n‚è∞ –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...")
            await page.wait_for_timeout(10000)

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")
        finally:
            await browser.close()


if __name__ == "__main__":
    asyncio.run(debug_hidden_blocks())
