#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª–∏–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from auto_reviews_parser.parsers.simple_master_parser import MasterDromParser

def debug_long_review_structure():
    parser = MasterDromParser()
    url = "https://www.drom.ru/reviews/audi/100/"
    
    print(f"üîç –û—Ç–ª–∞–¥–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª–∏–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤: {url}")
    
    soup = parser._make_request(url)
    if not soup:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
    component_reviews = soup.find_all("div", {"data-ftid": "component_review"})
    review_items = soup.find_all("div", {"data-ftid": "review-item"})
    
    print(f"üîé component_review: {len(component_reviews)}")
    print(f"üîé review-item: {len(review_items)}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç component_review
    if component_reviews:
        print(f"\nüìù –ü–µ—Ä–≤—ã–π component_review:")
        first_review = component_reviews[0]
        print(f"  ID: {first_review.get('id', '–ù–ï–¢')}")
        print(f"  –ö–ª–∞—Å—Å—ã: {first_review.get('class', [])}")
        
        # –ü–æ–∏—Å–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        title_h3 = first_review.find("h3")
        title_div = first_review.find("div", {"data-ftid": "component_review_title"})
        print(f"  H3 –∑–∞–≥–æ–ª–æ–≤–æ–∫: {title_h3.get_text(strip=True) if title_h3 else '–ù–ï–¢'}")
        print(f"  Title div: {title_div.get_text(strip=True) if title_div else '–ù–ï–¢'}")
        
        # –ü–æ–∏—Å–∫ –∞–≤—Ç–æ—Ä–∞
        author_spans = first_review.find_all("span", class_="css-1u4ddp")
        print(f"  –ù–∞–π–¥–µ–Ω–æ span.css-1u4ddp: {len(author_spans)}")
        if author_spans:
            print(f"  –ê–≤—Ç–æ—Ä: {author_spans[0].get_text(strip=True)}")
        
        # –ü–æ–∏—Å–∫ –¥–∞—Ç—ã
        date_spans = first_review.find_all("span", class_="css-1tc5ro3")
        time_elems = first_review.find_all("time")
        print(f"  –ù–∞–π–¥–µ–Ω–æ span.css-1tc5ro3: {len(date_spans)}")
        print(f"  –ù–∞–π–¥–µ–Ω–æ time: {len(time_elems)}")
        
        # –ü–æ–∏—Å–∫ –ø–ª—é—Å–æ–≤/–º–∏–Ω—É—Å–æ–≤
        positive_divs = first_review.find_all("div", {"data-ftid": "review-content__positive"})
        negative_divs = first_review.find_all("div", {"data-ftid": "review-content__negative"})
        print(f"  –ü–ª—é—Å—ã: {len(positive_divs)}")
        print(f"  –ú–∏–Ω—É—Å—ã: {len(negative_divs)}")
        
        # –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
        print(f"\nüèóÔ∏è –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ –æ—Ç–∑—ã–≤–∞:")
        print(f"HTML: {str(first_review)[:500]}...")

if __name__ == "__main__":
    debug_long_review_structure()
