#!/usr/bin/env python3
"""
üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ï–ê–õ–¨–ù–û–ì–û –ü–ê–†–°–ï–†–ê DROM.RU
=========================================

–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–∞ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–±–µ–∑ –º–æ–∫–æ–≤ –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö - —Ç–æ–ª—å–∫–æ –ø–∞—Ä—Å–∏–Ω–≥ –∏ –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.
"""

from auto_reviews_parser.parsers.drom_reviews import DromReviewsParser


def test_real_parsing():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–∑—ã–≤–æ–≤"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–∑—ã–≤–æ–≤ —Å drom.ru")
    print("="*60)
    
    parser = DromReviewsParser(delay=0.5)
    
    # –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_models = [
        ("toyota", "camry"),
        ("toyota", "land-cruiser"),
        ("bmw", "x5"),
        ("mercedes-benz", "e-class"),
        ("lada", "granta")
    ]
    
    for brand, model in test_models:
        print(f"\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {brand.upper()} {model.upper()}")
        print("-" * 40)
        
        try:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–ª–∏–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã (1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
            print(f"üîç –ü–æ–∏—Å–∫ –¥–ª–∏–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤...")
            long_reviews = parser.parse_long_reviews(
                brand_url_name=brand,
                model_url_name=model,
                max_pages=1
            )
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ—Ä–æ—Ç–∫–∏–µ –æ—Ç–∑—ã–≤—ã (1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)  
            print(f"üîç –ü–æ–∏—Å–∫ –∫–æ—Ä–æ—Ç–∫–∏—Ö –æ—Ç–∑—ã–≤–æ–≤...")
            short_reviews = parser.parse_short_reviews(
                brand_url_name=brand,
                model_url_name=model,
                max_pages=1
            )
            
            # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            total_reviews = len(long_reviews) + len(short_reviews)
            print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢: {total_reviews} –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞–π–¥–µ–Ω–æ")
            print(f"   ‚Ä¢ –î–ª–∏–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã: {len(long_reviews)}")
            print(f"   ‚Ä¢ –ö–æ—Ä–æ—Ç–∫–∏–µ –æ—Ç–∑—ã–≤—ã: {len(short_reviews)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –æ—Ç–∑—ã–≤–æ–≤
            if long_reviews:
                print(f"\nüìù –ü—Ä–∏–º–µ—Ä –¥–ª–∏–Ω–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞:")
                review = long_reviews[0]
                print(f"   –ê–≤—Ç–æ—Ä: {review.get('author', '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω')}")
                print(f"   –î–∞—Ç–∞: {review.get('publish_date', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞')}")
                content = review.get('content', '')
                if content:
                    print(f"   –¢–µ–∫—Å—Ç: {content[:100]}...")
            
            if short_reviews:
                print(f"\nüí¨ –ü—Ä–∏–º–µ—Ä –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –æ—Ç–∑—ã–≤–∞:")
                review = short_reviews[0]
                print(f"   –ê–≤—Ç–æ—Ä: {review.get('author', '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω')}")
                content = review.get('content', '')
                if content:
                    print(f"   –¢–µ–∫—Å—Ç: {content[:100]}...")
            
            # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –æ—Ç–∑—ã–≤—ã - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            if total_reviews > 0:
                print(f"\n‚úÖ –£–°–ü–ï–•! –ù–∞–π–¥–µ–Ω—ã –æ—Ç–∑—ã–≤—ã –¥–ª—è {brand}/{model}")
                return brand, model, long_reviews, short_reviews
                
        except Exception as e:
            print(f"‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ {brand}/{model}: {e}")
            continue
    
    print(f"\n‚ö†Ô∏è  –û—Ç–∑—ã–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∏ –¥–ª—è –æ–¥–Ω–æ–π –∏–∑ —Ç–µ—Å—Ç–∏—Ä—É–µ–º—ã—Ö –º–æ–¥–µ–ª–µ–π")
    return None, None, [], []


if __name__ == "__main__":
    brand, model, long_reviews, short_reviews = test_real_parsing()
    
    if brand and model:
        print(f"\nüéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
        print(f"–£—Å–ø–µ—à–Ω–æ —Å–ø–∞—Ä—à–µ–Ω—ã –æ—Ç–∑—ã–≤—ã –¥–ª—è {brand.upper()} {model.upper()}")
        print(f"–ù–∞–π–¥–µ–Ω–æ: {len(long_reviews)} –¥–ª–∏–Ω–Ω—ã—Ö + {len(short_reviews)} –∫–æ—Ä–æ—Ç–∫–∏—Ö –æ—Ç–∑—ã–≤–æ–≤")
    else:
        print(f"\nüîç –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –º–∞—Ä–∫–∏/–º–æ–¥–µ–ª–∏")
        print(f"–ò–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞ drom.ru")
