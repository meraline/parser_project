#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö —Ñ–∞–π–ª–∞—Ö.
–ù–µ —Ç—Ä–æ–≥–∞–µ—Ç —Ñ–∞–π–ª—ã –≤ archive –ø–∞–ø–∫–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã –¥–ª—è –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è.
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, '/home/analityk/–î–æ–∫—É–º–µ–Ω—Ç—ã/projects/parser_project/src')

def fix_imports():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏"""
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤
    fixes = {
        # CLI —Ñ–∞–π–ª—ã
        'cli/main.py': [
            ('auto_reviews_parser.database.base', 'src.auto_reviews_parser.database.base'),
            ('auto_reviews_parser.database.repositories.review_repository', 'src.auto_reviews_parser.database.repositories.review_repository'),
            ('auto_reviews_parser.parsers.drom', 'src.auto_reviews_parser.parsers.drom_reviews'),
            ('auto_reviews_parser.parsers.drive2', 'src.auto_reviews_parser.parsers.drive2'),
            ('auto_reviews_parser.services.parser_service', 'src.auto_reviews_parser.services.queue_service'),
            ('auto_reviews_parser.services.parallel_parser', 'src.auto_reviews_parser.services.queue_service'),
            ('cli.init_db', 'init_db'),
        ],
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
        'scripts/main.py': [
            ('src.auto_reviews_parser.database.schema', 'src.auto_reviews_parser.database.schema'),
            ('src.auto_reviews_parser.catalog.initializer', 'src.auto_reviews_parser.catalog.initializer'),
            ('src.auto_reviews_parser.parsers.drom_reviews', 'src.auto_reviews_parser.parsers.drom_reviews'),
        ],
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ src —Ñ–∞–π–ª—ã
        'src/auto_reviews_parser/__init__.py': [
            ('database.base', '.database.base'),
        ],
        
        'src/auto_reviews_parser/utils/retry_decorator.py': [
            ('delay_manager', '.delay_manager'),
        ],
        
        'src/auto_reviews_parser/utils/health.py': [
            ('services.auto_reviews_parser', '..services.queue_service'),
        ],
        
        'src/auto_reviews_parser/database/repositories/review_repository.py': [
            ('base', '..base'),
            ('models', '...models'),
            ('utils.logger', '...utils.logger'),
        ],
        
        'src/auto_reviews_parser/database/repositories/comment_repository.py': [
            ('base', '..base'),
            ('models.comment', '...models.comment'),
            ('utils.logger', '...utils.logger'),
        ],
        
        'src/auto_reviews_parser/database/repositories/queue_repository.py': [
            ('base', '..base'),
        ],
        
        'src/auto_reviews_parser/models/__init__.py': [
            ('review', '.review'),
        ],
        
        'src/auto_reviews_parser/models/extended_review.py': [
            ('review', '.review'),
        ],
        
        'src/auto_reviews_parser/catalog/initializer.py': [
            ('database.schema', '..database.schema'),
        ],
        
        'src/auto_reviews_parser/analyzers/__init__.py': [
            ('data_analyzer', '.data_analyzer'),
        ],
        
        'src/auto_reviews_parser/parsers/__init__.py': [
            ('base', '.base'),
            ('drom_reviews', '.drom_reviews'),
            ('models.review', '..models.review'),
        ],
        
        'src/auto_reviews_parser/parsers/drom_reviews.py': [
            ('database.schema', '..database.schema'),
        ],
        
        'src/auto_reviews_parser/parsers/base.py': [
            ('models.review', '..models.review'),
            ('utils.delay_manager', '..utils.delay_manager'),
            ('utils.metrics', '..utils.metrics'),
        ],
        
        'src/auto_reviews_parser/parsers/sync_base.py': [
            ('models.review', '..models.review'),
            ('utils.delay_manager', '..utils.delay_manager'),
            ('utils.retry_decorator', '..utils.retry_decorator'),
            ('utils.metrics', '..utils.metrics'),
        ],
        
        'src/auto_reviews_parser/parsers/drive2.py': [
            ('base', '.base'),
            ('models', '..models'),
            ('utils.logger', '..utils.logger'),
        ],
    }
    
    base_path = '/home/analityk/–î–æ–∫—É–º–µ–Ω—Ç—ã/projects/parser_project'
    
    for file_path, imports_to_fix in fixes.items():
        full_path = os.path.join(base_path, file_path)
        
        if not os.path.exists(full_path):
            print(f"‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {full_path}")
            continue
            
        print(f"üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –≤ {file_path}")
        
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        try:
            with open(full_path, 'r', encoding='utf-8') as f:
                content = f.read()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {full_path}: {e}")
            continue
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
        modified = False
        for old_import, new_import in imports_to_fix:
            old_line = f"from {old_import} import"
            new_line = f"from {new_import} import"
            
            if old_line in content:
                content = content.replace(old_line, new_line)
                modified = True
                print(f"  ‚úÖ {old_import} ‚Üí {new_import}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if modified:
            try:
                with open(full_path, 'w', encoding='utf-8') as f:
                    f.write(content)
                print(f"  üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏: {e}")
        else:
            print(f"  ‚ÑπÔ∏è  –ò–º–ø–æ—Ä—Ç—ã —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")

if __name__ == "__main__":
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤...")
    fix_imports()
    print("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ")
