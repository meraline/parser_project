#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞ –∏ –≥–æ—Ä–æ–¥–∞ –Ω–∞ –¥—Ä—É–≥–æ–º –æ—Ç–∑—ã–≤–µ
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = "/home/analityk/–î–æ–∫—É–º–µ–Ω—Ç—ã/projects/parser_project"
sys.path.insert(0, project_root)
sys.path.insert(0, os.path.join(project_root, "src"))

from src.auto_reviews_parser.parsers.drom import DromParser


def test_author_city():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞ –∏ –≥–æ—Ä–æ–¥–∞"""

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π –ø–æ–ø–∞–≤—à–∏–π—Å—è –æ—Ç–∑—ã–≤ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–∞—Ä—Å–∏–Ω–≥–∞
    # –≥–¥–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ—Ä
    test_urls = [
        "https://www.drom.ru/reviews/toyota/camry/1344577/",  # –ü–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π –æ—Ç–∑—ã–≤
    ]

    parser = DromParser(gentle_mode=True)

    for url in test_urls:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–∑—ã–≤: {url}")
        print("=" * 60)

        try:
            reviews = parser.parse_single_review(url)

            if reviews:
                review = reviews[0]
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–ø–∞—Ä—Å–∏–ª–∏ –æ—Ç–∑—ã–≤")
                print(f"   –ê–≤—Ç–æ—Ä: '{review.author}'")
                print(f"   –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {review.overall_rating}")
                print(f"   –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:")
                print(f"     - –ì–æ–¥: {review.year}")
                print(f"     - –¢–∏–ø –∫—É–∑–æ–≤–∞: {review.body_type}")
                print(
                    f"     - –î–≤–∏–≥–∞—Ç–µ–ª—å: {review.engine_volume}–ª, {review.engine_power}–ª.—Å."
                )
                print(f"     - –¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è: {review.transmission}")
                print(f"     - –ü—Ä–∏–≤–æ–¥: {review.drive_type}")
                print(f"     - –ü—Ä–æ–±–µ–≥: {review.mileage} –∫–º")

            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∞—Ä—Å–∏—Ç—å –æ—Ç–∑—ã–≤")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            import traceback

            traceback.print_exc()


if __name__ == "__main__":
    test_author_city()
