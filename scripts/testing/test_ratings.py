#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –∫–æ–¥—É
sys.path.insert(0, os.path.join(os.path.dirname(__file__), "src"))

from auto_reviews_parser.parsers.drom import DromParser
from auto_reviews_parser.database.base import Database
from auto_reviews_parser.database.repositories.review_repository import ReviewRepository


def test_ratings_extraction():
    print("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫...")

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É
    test_db = "test_ratings.db"
    if os.path.exists(test_db):
        os.remove(test_db)

    db = Database(test_db)
    repo = ReviewRepository(db)

    # –ü–∞—Ä—Å–µ—Ä –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ
    parser = DromParser(gentle_mode=False)

    # –ü–∞—Ä—Å–∏–º –æ–¥–∏–Ω –æ—Ç–∑—ã–≤ Toyota Camry
    reviews = parser.parse_catalog_model("toyota", "camry", max_reviews=1)

    print(f"‚úÖ –°–ø–∞—Ä—Å–∏–ª–∏ {len(reviews)} –æ—Ç–∑—ã–≤–æ–≤")

    if reviews:
        review = reviews[0]
        print(f"\nüìã –û—Ü–µ–Ω–∫–∏ –≤ Review:")
        print(f"  –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: {review.overall_rating}")
        print(f"  –í–Ω–µ—à–Ω–∏–π –≤–∏–¥: {review.exterior_rating}")
        print(f"  –°–∞–ª–æ–Ω: {review.interior_rating}")
        print(f"  –î–≤–∏–≥–∞—Ç–µ–ª—å: {review.engine_rating}")
        print(f"  –•–æ–¥–æ–≤—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞: {review.driving_rating}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
        success = repo.save(review)
        print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –±–∞–∑—É: {'‚úÖ' if success else '‚ùå'}")

        if success:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ –±–∞–∑–µ
            import sqlite3

            conn = sqlite3.connect(test_db)
            cursor = conn.cursor()

            cursor.execute(
                """
                SELECT overall_rating, exterior_rating, interior_rating,
                       engine_rating, driving_rating
                FROM reviews 
                WHERE url = ?
            """,
                (review.url,),
            )

            result = cursor.fetchone()
            if result:
                print(f"\nüîç –û—Ü–µ–Ω–∫–∏ –≤ –±–∞–∑–µ:")
                print(f"  –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: {result[0]}")
                print(f"  –í–Ω–µ—à–Ω–∏–π –≤–∏–¥: {result[1]}")
                print(f"  –°–∞–ª–æ–Ω: {result[2]}")
                print(f"  –î–≤–∏–≥–∞—Ç–µ–ª—å: {result[3]}")
                print(f"  –•–æ–¥–æ–≤—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞: {result[4]}")
            else:
                print("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ!")

            conn.close()


if __name__ == "__main__":
    test_ratings_extraction()
