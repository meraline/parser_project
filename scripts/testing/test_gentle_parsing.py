#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ 20 –æ—Ç–∑—ã–≤–æ–≤ –≤ —â–∞–¥—è—â–µ–º —Ä–µ–∂–∏–º–µ
"""
import sys
import os
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –∫–æ–¥—É
sys.path.insert(0, os.path.join(os.path.dirname(__file__), "src"))

from auto_reviews_parser.parsers.drom import DromParser
from auto_reviews_parser.database.base import Database
from auto_reviews_parser.database.repositories.review_repository import ReviewRepository


def test_gentle_parsing():
    print("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º —â–∞–¥—è—â–∏–π –ø–∞—Ä—Å–∏–Ω–≥ 20 –æ—Ç–∑—ã–≤–æ–≤...")

    # –°–æ–∑–¥–∞–µ–º –±–∞–∑—É
    db_path = "test_20_reviews.db"
    if os.path.exists(db_path):
        os.remove(db_path)

    db = Database(db_path)
    repo = ReviewRepository(db)

    # –ü–∞—Ä—Å–µ—Ä –≤ —â–∞–¥—è—â–µ–º —Ä–µ–∂–∏–º–µ
    parser = DromParser(gentle_mode=True)

    print(f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞:")
    print(f"  –©–∞–¥—è—â–∏–π —Ä–µ–∂–∏–º: {parser.gentle_mode}")
    print(f"  –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–∑—ã–≤–∞–º–∏: {parser.request_delay} —Å–µ–∫")
    print(f"  –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏: {parser.page_delay} —Å–µ–∫")

    start_time = time.time()

    # –ü–∞—Ä—Å–∏–º Toyota Camry
    print(f"\nüöó –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ Toyota Camry (20 –æ—Ç–∑—ã–≤–æ–≤)...")
    reviews = parser.parse_catalog_model("toyota", "camry", max_reviews=20)

    end_time = time.time()
    elapsed = end_time - start_time

    print(f"\n‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print(f"  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {elapsed:.1f} —Å–µ–∫—É–Ω–¥")
    print(f"  –°–æ–±—Ä–∞–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: {len(reviews)}")
    print(f"  –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å: {elapsed/len(reviews):.1f} —Å–µ–∫/–æ—Ç–∑—ã–≤")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
    saved_count = 0
    for review in reviews:
        if repo.save(review):
            saved_count += 1

    print(f"  –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –±–∞–∑—É: {saved_count}")

    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    reviews_with_chars = sum(1 for r in reviews if r.year is not None)
    additions = sum(1 for r in reviews if r.type == "addition")
    main_reviews = sum(1 for r in reviews if r.type == "review")

    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  –û—Å–Ω–æ–≤–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤: {main_reviews}")
    print(f"  –î–æ–ø–æ–ª–Ω–µ–Ω–∏–π: {additions}")
    print(f"  –° —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏: {reviews_with_chars}")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    print(f"\nüìã –ü—Ä–∏–º–µ—Ä—ã —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
    for i, review in enumerate(reviews[:3]):
        print(f"  {i+1}. {review.url}")
        print(
            f"     –ì–æ–¥: {review.year}, –û–±—ä–µ–º: {review.engine_volume}–ª, "
            f"–ú–æ—â–Ω–æ—Å—Ç—å: {review.engine_power}–ª.—Å."
        )
        print(
            f"     –†–∞—Å—Ö–æ–¥ –≥–æ—Ä–æ–¥/—Ç—Ä–∞—Å—Å–∞: {review.fuel_consumption_city}/"
            f"{review.fuel_consumption_highway} –ª/100–∫–º"
        )


if __name__ == "__main__":
    test_gentle_parsing()
