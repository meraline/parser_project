#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –æ—Ç–∑—ã–≤–æ–≤
"""

import requests
from bs4 import BeautifulSoup
import re

def test_reviews_detection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –æ—Ç–∑—ã–≤–æ–≤"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Å—Å–∏–∏
    session = requests.Session()
    session.headers.update({
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
    })
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ URL –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
    test_cases = [
        {
            'brand': 'Acura',
            'url': 'https://www.drom.ru/reviews/acura/',
            'expected_structure': True  # –û–∂–∏–¥–∞–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π
        },
        {
            'brand': 'Acura MDX',
            'url': 'https://www.drom.ru/reviews/acura/mdx/',
            'expected_structure': True
        },
        {
            'brand': 'Toyota Camry',
            'url': 'https://www.drom.ru/reviews/toyota/camry/',
            'expected_structure': True
        }
    ]
    
    print("üîç –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –æ—Ç–∑—ã–≤–æ–≤\n")
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"üìã –¢–µ—Å—Ç {i}: {test_case['brand']}")
        print(f"URL: {test_case['url']}")
        
        try:
            # –ó–∞–ø—Ä–æ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            response = session.get(test_case['url'])
            response.raise_for_status()
            
            soup = BeautifulSoup(response.content, 'html.parser')
            
            # –ò—â–µ–º –±–ª–æ–∫ —Å –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è–º–∏
            tabs_block = soup.find('div', class_='_65ykvx0')
            
            if tabs_block:
                print("‚úÖ –ù–∞–π–¥–µ–Ω –±–ª–æ–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –æ—Ç–∑—ã–≤–æ–≤")
                
                # –ü–æ–∏—Å–∫ –∫–Ω–æ–ø–∫–∏ –¥–ª–∏–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
                long_reviews_tab = tabs_block.find('a', {'data-ftid': 'reviews_tab_button_long_reviews'})
                short_reviews_tab = tabs_block.find('a', {'data-ftid': 'reviews_tab_button_short_reviews'})
                
                # –ê–Ω–∞–ª–∏–∑ –¥–ª–∏–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
                if long_reviews_tab:
                    long_text = long_reviews_tab.get_text(strip=True)
                    long_href = long_reviews_tab.get('href', '')
                    long_match = re.search(r'(\d+)', long_text)
                    long_count = int(long_match.group(1)) if long_match else 0
                    
                    print(f"üìù –î–ª–∏–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã:")
                    print(f"   –¢–µ–∫—Å—Ç: '{long_text}'")
                    print(f"   –°—Å—ã–ª–∫–∞: {long_href}")
                    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {long_count}")
                else:
                    print("‚ùå –ö–Ω–æ–ø–∫–∞ –¥–ª–∏–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
                # –ê–Ω–∞–ª–∏–∑ –∫–æ—Ä–æ—Ç–∫–∏—Ö –æ—Ç–∑—ã–≤–æ–≤
                if short_reviews_tab:
                    short_text = short_reviews_tab.get_text(strip=True)
                    short_href = short_reviews_tab.get('href', '')
                    short_match = re.search(r'(\d+)', short_text.replace(' ', ''))
                    short_count = int(short_match.group(1)) if short_match else 0
                    
                    print(f"üí¨ –ö–æ—Ä–æ—Ç–∫–∏–µ –æ—Ç–∑—ã–≤—ã:")
                    print(f"   –¢–µ–∫—Å—Ç: '{short_text}'")
                    print(f"   –°—Å—ã–ª–∫–∞: {short_href}")
                    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {short_count}")
                else:
                    print("‚ùå –ö–Ω–æ–ø–∫–∞ –∫–æ—Ä–æ—Ç–∫–∏—Ö –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
                print(f"\nüîç –ê–ù–ê–õ–ò–ó:")
                if long_reviews_tab and short_reviews_tab:
                    print("‚úÖ –û–±–∞ —Ç–∏–ø–∞ –æ—Ç–∑—ã–≤–æ–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Å—ã–ª–æ–∫
                    long_is_main = '5kopeek' not in long_href
                    short_has_5kopeek = '5kopeek' in short_href
                    
                    if long_is_main and short_has_5kopeek:
                        print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Å—ã–ª–æ–∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞:")
                        print(f"   - –î–ª–∏–Ω–Ω—ã–µ: –æ—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
                        print(f"   - –ö–æ—Ä–æ—Ç–∫–∏–µ: —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å '5kopeek'")
                    else:
                        print("‚ùå –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Å—ã–ª–æ–∫ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞:")
                        print(f"   - –î–ª–∏–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç '5kopeek': {not long_is_main}")
                        print(f"   - –ö–æ—Ä–æ—Ç–∫–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç '5kopeek': {not short_has_5kopeek}")
                    
                else:
                    print("‚ùå –ù–µ –≤—Å–µ —Ç–∏–ø—ã –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞–π–¥–µ–Ω—ã")
                    
            else:
                print("‚ùå –ë–ª–æ–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
                # –í–æ–∑–º–æ–∂–Ω–æ, –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–∏–ø –æ—Ç–∑—ã–≤–æ–≤
                # –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä—è–º–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                long_reviews = soup.find_all('div', {'data-ftid': 'review-item'})
                short_reviews = soup.find_all('div', {'data-ftid': 'short-review-item'})
                
                print(f"üîç –ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:")
                print(f"   - –î–ª–∏–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤: {len(long_reviews)}")
                print(f"   - –ö–æ—Ä–æ—Ç–∫–∏—Ö –æ—Ç–∑—ã–≤–æ–≤: {len(short_reviews)}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")
        
        print("-" * 80)
        print()

def test_html_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç HTML-—Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–∑ –ø—Ä–∏–º–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    print("üß™ –¢–ï–°–¢: –ê–Ω–∞–ª–∏–∑ HTML-—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏–∑ –ø—Ä–∏–º–µ—Ä–∞\n")
    
    # HTML –∏–∑ –ø—Ä–∏–º–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    sample_html = '''
    <div class="_65ykvx0">
        <a class="_65ykvx1 w6f4f60 w6f4f63 w6f4f65" data-ftid="reviews_tab_button_long_reviews" href="https://www.drom.ru/reviews/acura/?order=relevance" data-ga-stats-name="tabs" data-ga-stats-track-view="true" data-ga-stats-track-click="true" data-ga-stats-va-payload="{&quot;tab_name&quot;:&quot;long_reviews&quot;}">
            <span>130 –æ—Ç–∑—ã–≤–æ–≤</span>
        </a>
        <a class="_65ykvx1 w6f4f60 w6f4f63 w6f4f66" data-ftid="reviews_tab_button_short_reviews" href="https://www.drom.ru/reviews/acura/5kopeek/?order=useful" data-ga-stats-name="tabs" data-ga-stats-track-view="true" data-ga-stats-track-click="true" data-ga-stats-va-payload="{&quot;tab_name&quot;:&quot;short_reviews&quot;}">
            <span>553 –∫–æ—Ä–æ—Ç–∫–∏—Ö –æ—Ç–∑—ã–≤–∞</span>
        </a>
    </div>
    '''
    
    soup = BeautifulSoup(sample_html, 'html.parser')
    
    # –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    tabs_block = soup.find('div', class_='_65ykvx0')
    print(f"‚úÖ –ë–ª–æ–∫ –Ω–∞–π–¥–µ–Ω: {bool(tabs_block)}")
    
    if tabs_block:
        # –î–ª–∏–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
        long_tab = tabs_block.find('a', {'data-ftid': 'reviews_tab_button_long_reviews'})
        if long_tab:
            long_text = long_tab.get_text(strip=True)
            long_href = long_tab.get('href')
            long_match = re.search(r'(\d+)', long_text)
            long_count = int(long_match.group(1)) if long_match else 0
            
            print(f"üìù –î–ª–∏–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã:")
            print(f"   –¢–µ–∫—Å—Ç: '{long_text}'")
            print(f"   –°—Å—ã–ª–∫–∞: {long_href}")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {long_count}")
            print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç '5kopeek': {'5kopeek' in long_href}")
        
        # –ö–æ—Ä–æ—Ç–∫–∏–µ –æ—Ç–∑—ã–≤—ã
        short_tab = tabs_block.find('a', {'data-ftid': 'reviews_tab_button_short_reviews'})
        if short_tab:
            short_text = short_tab.get_text(strip=True)
            short_href = short_tab.get('href')
            short_match = re.search(r'(\d+)', short_text.replace(' ', ''))
            short_count = int(short_match.group(1)) if short_match else 0
            
            print(f"üí¨ –ö–æ—Ä–æ—Ç–∫–∏–µ –æ—Ç–∑—ã–≤—ã:")
            print(f"   –¢–µ–∫—Å—Ç: '{short_text}'")
            print(f"   –°—Å—ã–ª–∫–∞: {short_href}")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {short_count}")
            print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç '5kopeek': {'5kopeek' in short_href}")
        
        print(f"\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
        print(f"‚úÖ –ê–ª–≥–æ—Ä–∏—Ç–º –ø–∞—Ä—Å–µ—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç:")
        print(f"   - data-ftid='reviews_tab_button_long_reviews' ‚Üí –¥–ª–∏–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã")
        print(f"   - data-ftid='reviews_tab_button_short_reviews' ‚Üí –∫–æ—Ä–æ—Ç–∫–∏–µ –æ—Ç–∑—ã–≤—ã")
        print(f"   - –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —á–∏—Å–µ–ª –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print(f"   - –°—Å—ã–ª–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–µ–¥—É—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–∞–∑–¥–µ–ª—ã")

if __name__ == "__main__":
    print("üöÄ –ü–†–û–í–ï–†–ö–ê –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –¢–ò–ü–û–í –û–¢–ó–´–í–û–í\n")
    print("=" * 80)
    
    # –¢–µ—Å—Ç HTML-—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏–∑ –ø—Ä–∏–º–µ—Ä–∞
    test_html_structure()
    
    print("\n" + "=" * 80)
    
    # –¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
    test_reviews_detection()
